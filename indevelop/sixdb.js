/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/errorSys.js":
/*!*************************!*\
  !*** ./src/errorSys.js ***!
  \*************************/
/*! exports provided: lastErrorObj, makeErrorObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastErrorObj\", function() { return lastErrorObj; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeErrorObject\", function() { return makeErrorObject; });\nvar lastErrorObj = {};\nfunction makeErrorObject(origin, domException) {\n  var errorObj = {};\n\n  if (domException) {\n    errorObj.type = domException.name;\n    errorObj.origin = origin;\n    errorObj.description = domException.message;\n  }\n\n  lastErrorObj = errorObj;\n  return true;\n}\n\n//# sourceURL=webpack:///./src/errorSys.js?");

/***/ }),

/***/ "./src/helpers.js":
/*!************************!*\
  !*** ./src/helpers.js ***!
  \************************/
/*! exports provided: cursorAggregate, aggregateLog, setSharedObj, requestSuccessAction, requestErrorAction, tryGetAll, tryOpenCursor, cursorLoop, cursorGetRecords, cursorDelRecords, cursorCount, cursorUpdate, countLog, queryLog, tryGetByKey, isKey, initCursorLoop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cursorAggregate\", function() { return cursorAggregate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"aggregateLog\", function() { return aggregateLog; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSharedObj\", function() { return setSharedObj; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"requestSuccessAction\", function() { return requestSuccessAction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"requestErrorAction\", function() { return requestErrorAction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tryGetAll\", function() { return tryGetAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tryOpenCursor\", function() { return tryOpenCursor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cursorLoop\", function() { return cursorLoop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cursorGetRecords\", function() { return cursorGetRecords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cursorDelRecords\", function() { return cursorDelRecords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cursorCount\", function() { return cursorCount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cursorUpdate\", function() { return cursorUpdate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"countLog\", function() { return countLog; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"queryLog\", function() { return queryLog; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tryGetByKey\", function() { return tryGetByKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isKey\", function() { return isKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initCursorLoop\", function() { return initCursorLoop; });\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger */ \"./src/logger.js\");\n/* harmony import */ var _taskQueue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./taskQueue */ \"./src/taskQueue.js\");\n/* harmony import */ var _errorSys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errorSys */ \"./src/errorSys.js\");\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./main */ \"./src/main.js\");\n/* harmony import */ var _qrySys_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./qrySys.js */ \"./src/qrySys.js\");\n\n\n\n\n\nvar qrySys = _qrySys_js__WEBPACK_IMPORTED_MODULE_4__[\"_qrySys\"];\nvar sharedObj = {};\n\nfunction testCursor(conditionsBlocksArray, exitsInFirst, cursor) {\n  var test = false;\n  var i = 0;\n  var size = conditionsBlocksArray.length;\n\n  for (i = 0; i < size; i++) {\n    var conditions = conditionsBlocksArray[i].conditionsArray;\n    var intMode = conditionsBlocksArray[i].internalLogOperator;\n    test = qrySys.testConditionBlock(cursor, conditions, intMode);\n\n    if (test == exitsInFirst) {\n      break;\n    }\n  }\n\n  return test;\n}\n\nfunction reportCatch(origin, e, errorCallback) {\n  Object(_errorSys__WEBPACK_IMPORTED_MODULE_2__[\"makeErrorObject\"])(origin, e);\n  _taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"tasks\"].shift();\n  _main__WEBPACK_IMPORTED_MODULE_3__[\"db\"].close();\n  errorCallback(_errorSys__WEBPACK_IMPORTED_MODULE_2__[\"lastErrorObj\"]);\n  Object(_logger__WEBPACK_IMPORTED_MODULE_0__[\"logger\"])(_errorSys__WEBPACK_IMPORTED_MODULE_2__[\"lastErrorObj\"], true);\n}\n\nfunction cursorAggregate(cursor) {\n  if (cursor.value[sharedObj.property]) {\n    sharedObj.counter++;\n    sharedObj.actualValue = sharedObj.aggregatefn(sharedObj.actualValue, cursor.value[sharedObj.property], sharedObj.counter);\n  }\n}\nfunction aggregateLog() {\n  Object(_logger__WEBPACK_IMPORTED_MODULE_0__[\"logger\"])(\"Result of \".concat(sharedObj.origin, \" on property \\\"\").concat(sharedObj.property, \"\\\": \").concat(sharedObj.actualValue));\n}\nfunction setSharedObj(obj) {\n  sharedObj = obj;\n}\nfunction requestSuccessAction(event, origin, successCallback, message) {\n  successCallback(event, origin);\n  _main__WEBPACK_IMPORTED_MODULE_3__[\"db\"].close();\n  Object(_logger__WEBPACK_IMPORTED_MODULE_0__[\"logger\"])(message);\n  Object(_taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"done\"])();\n}\nfunction requestErrorAction(origin, error, errorCallback) {\n  _main__WEBPACK_IMPORTED_MODULE_3__[\"db\"].close();\n  Object(_errorSys__WEBPACK_IMPORTED_MODULE_2__[\"makeErrorObject\"])(origin, error);\n  Object(_logger__WEBPACK_IMPORTED_MODULE_0__[\"logger\"])(_errorSys__WEBPACK_IMPORTED_MODULE_2__[\"lastErrorObj\"], true);\n  _taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"tasks\"].shift();\n  errorCallback(_errorSys__WEBPACK_IMPORTED_MODULE_2__[\"lastErrorObj\"]);\n  Object(_taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"checkTasks\"])();\n}\nfunction tryGetAll(origin, source, errorCallback) {\n  var request = null;\n\n  try {\n    request = source.getAll();\n  } catch (e) {\n    reportCatch(origin, e, errorCallback);\n    return null;\n  }\n\n  return request;\n}\nfunction tryOpenCursor(origin, source, errorCallback) {\n  var request = null;\n\n  try {\n    request = source.openCursor();\n  } catch (e) {\n    reportCatch(origin, e, errorCallback);\n    return null;\n  }\n\n  return request;\n}\nfunction cursorLoop(cursor) {\n  if (cursor) {\n    var test = testCursor(sharedObj.conditionsBlocksArray, sharedObj.exitsInFirstTrue, cursor);\n\n    if (test) {\n      sharedObj.cursorFunction(cursor);\n    }\n\n    cursor.continue();\n  } else {\n    sharedObj.successCallback(sharedObj.event, sharedObj.origin, sharedObj.query);\n    _main__WEBPACK_IMPORTED_MODULE_3__[\"db\"].close();\n    sharedObj.logFunction();\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"done\"])();\n  }\n}\nfunction cursorGetRecords(cursor) {\n  sharedObj.resultFiltered.push(cursor.value);\n  sharedObj.counter++;\n}\nfunction cursorDelRecords(cursor) {\n  cursor.delete();\n  sharedObj.counter++;\n}\nfunction cursorCount() {\n  sharedObj.counter++;\n}\nfunction cursorUpdate(cursor) {\n  var updateData = cursor.value;\n\n  for (var i = 0, j = sharedObj.newObjectValuesSize; i < j; i++) {\n    // If the new value for the property keys[i] is a function then the new value is function(oldValue)\n    updateData[sharedObj.keys[i]] = typeof sharedObj.objectValues[sharedObj.keys[i]] == 'function' ? sharedObj.objectValues[sharedObj.keys[i]](updateData[sharedObj.keys[i]]) : sharedObj.objectValues[sharedObj.keys[i]];\n  }\n\n  cursor.update(updateData);\n  sharedObj.counter++;\n}\nfunction countLog() {\n  Object(_logger__WEBPACK_IMPORTED_MODULE_0__[\"logger\"])(\"Processed query finished: \\\"\".concat(sharedObj.query, \"\\\"\\n \").concat(sharedObj.counter, \" records counted from the query to: \\\"\").concat(sharedObj.source, \"\\\"\"));\n}\nfunction queryLog() {\n  Object(_logger__WEBPACK_IMPORTED_MODULE_0__[\"logger\"])(\"Processed query: \\\"\".concat(sharedObj.query, \"\\\" finished\\n \").concat(sharedObj.counter, \" records returned from object store \\\"\").concat(sharedObj.source, \"\\\"\"));\n}\nfunction tryGetByKey(origin, source, key, errorCallback) {\n  var request = null;\n\n  try {\n    request = source.getAll(key);\n  } catch (e) {\n    reportCatch(origin, e, errorCallback);\n    return null;\n  }\n\n  return request;\n}\nfunction isKey(query) {\n  var isKey = false;\n\n  if (query) {\n    if (typeof query == 'number') {\n      isKey = true;\n    } else {\n      isKey = query.match(qrySys.operatorRgx) ? false : true;\n    }\n  }\n\n  return isKey;\n}\nfunction initCursorLoop(source, errorCallback) {\n  var request = tryOpenCursor(sharedObj.origin, source, errorCallback);\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = function (event) {\n    var cursor = event.target.result;\n    cursorLoop(cursor);\n  };\n\n  request.onerror = function () {\n    requestErrorAction(origin, request.error, errorCallback);\n  };\n}\n\n//# sourceURL=webpack:///./src/helpers.js?");

/***/ }),

/***/ "./src/logger.js":
/*!***********************!*\
  !*** ./src/logger.js ***!
  \***********************/
/*! exports provided: logEnum, logger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logEnum\", function() { return logEnum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logger\", function() { return logger; });\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.js */ \"./src/main.js\");\n\nvar logEnum = {\n  begin: '//--------------------------------------->'\n};\nfunction logger(message, isError) {\n  if (_main_js__WEBPACK_IMPORTED_MODULE_0__[\"consoleOff\"] && !isError) return;\n  if (!isError) console.log(message);else console.error(message);\n}\n\n//# sourceURL=webpack:///./src/logger.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! exports provided: customOperator, consoleOff, db, newStore, dbName, tkOpen, setDb, voidFn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"customOperator\", function() { return customOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"consoleOff\", function() { return consoleOff; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"db\", function() { return db; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"newStore\", function() { return newStore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dbName\", function() { return dbName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tkOpen\", function() { return tkOpen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setDb\", function() { return setDb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"voidFn\", function() { return voidFn; });\n/* harmony import */ var _qrySys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./qrySys.js */ \"./src/qrySys.js\");\n/* harmony import */ var _taskQueue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./taskQueue */ \"./src/taskQueue.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ \"./src/logger.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers */ \"./src/helpers.js\");\n/* harmony import */ var _sixdbStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sixdbStore */ \"./src/sixdbStore.js\");\n\n\n\n\n\nvar db = null;\nvar consoleOff = false;\nvar dbName;\n\nvar voidFn = function voidFn() {\n  return 0;\n};\n\nvar customOperator = function customOperator(value1, value2) {\n  return value1 == value2;\n}; // Opens the database and stores the result in db\n\nfunction openDb() {\n  var request = window.indexedDB.open(dbName);\n\n  request.onerror = function () {\n    alert('Error. You must allow web app to use indexedDB.');\n  };\n\n  request.onsuccess = function (event) {\n    db = event.target.result;\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"done\"])();\n  };\n} // Predefined task to open the actual database\n\n\nvar tkOpen = {\n  args: null,\n  fn: openDb\n}; // Allows other modules modify variable db\n\nfunction setDb(_db) {\n  db = _db;\n} // Creates a store in the database\n\n\nfunction newStore(storeName) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      keyPath = _ref.keyPath,\n      autoIncrement = _ref.autoIncrement,\n      successCallback = _ref.successCallback,\n      errorCallback = _ref.errorCallback;\n\n  var version;\n  var origin = 'Sixdb.newStore()';\n  Object(_logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logger\"])(origin + _logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logEnum\"].begin); // If store already exist then returns\n\n  if (db.objectStoreNames.contains(storeName)) {\n    db.close();\n    Object(_logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logger\"])(\"Object store \\\"\".concat(storeName, \"\\\" already exists\"));\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"done\"])();\n    return;\n  }\n\n  version = db.version;\n  db.close();\n  var newVersion = version + 1;\n\n  var _store;\n\n  var request = window.indexedDB.open(dbName, newVersion);\n\n  request.onupgradeneeded = function (event) {\n    db = event.target.result;\n\n    try {\n      _store = db.createObjectStore(storeName, {\n        keyPath: keyPath,\n        autoIncrement: autoIncrement\n      });\n    } catch (e) {\n      Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"requestErrorAction\"])(origin, e, errorCallback);\n      return;\n    }\n\n    _store.onerror = function (event) {\n      Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"requestErrorAction\"])(origin, event.target.error, errorCallback);\n    };\n  };\n\n  request.onsuccess = function (event) {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"requestSuccessAction\"])(event, origin, successCallback, \"New object store \\\"\".concat(storeName, \"\\\" created\"));\n  };\n}\n\nfunction delStore(storeName, _ref2) {\n  var successCallback = _ref2.successCallback,\n      errorCallback = _ref2.errorCallback;\n  var origin = 'Sixdb.delStore()';\n  Object(_logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logger\"])(origin + _logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logEnum\"].begin); //// Gets the new version\n  //\n\n  var version = db.version;\n  db.close();\n  var newVersion = version + 1; //// The change of the database schema only can be performed in the onupgradedneeded event\n  //// so a new version number is needed to trigger that event.\n  //\n\n  var request = window.indexedDB.open(dbName, newVersion);\n\n  request.onupgradeneeded = function (event) {\n    db = event.target.result;\n    db.deleteObjectStore(storeName);\n  };\n\n  request.onsuccess = function (event) {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"requestSuccessAction\"])(event, origin, successCallback, \"Object store \\\"\".concat(storeName, \"\\\" deleted\"));\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n}\n\nfunction delDB(_ref3) {\n  var successCallback = _ref3.successCallback,\n      errorCallback = _ref3.errorCallback;\n  var origin = 'Sixdb.destroy()';\n  Object(_logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logger\"])(origin + _logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logEnum\"].begin);\n  var request = window.indexedDB.deleteDatabase(dbName);\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n\n  request.onsuccess = function (event) {\n    successCallback(event, origin);\n    Object(_logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logger\"])(\"Database \\\"\".concat(dbName, \"\\\" deleted\"));\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"done\"])();\n  };\n}\n/**\r\n * Constructs a Sixdb instance.\r\n * @class\r\n * @param  {string} _dbName Name of the database \r\n */\n\n\nwindow.Sixdb = function (_dbName) {\n  dbName = _dbName; // Query system from qrySys.js\n\n  var qrySys = _qrySys_js__WEBPACK_IMPORTED_MODULE_0__[\"_qrySys\"]; // Creates or opens the database\n\n  function newDB() {\n    var errorCallback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : voidFn;\n    var request = window.indexedDB.open(dbName);\n    var origin = 'Sixdb.newDB()';\n    Object(_logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logger\"])(origin + _logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logEnum\"].begin); // Boolean: Database doesn't exist\n\n    var noDb = false; // if onupgradeneeded means is a new database\n\n    request.onupgradeneeded = function () {\n      noDb = true;\n    };\n\n    request.onsuccess = function (event) {\n      var db = event.target.result;\n      db.close();\n\n      if (noDb) {\n        Object(_logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logger\"])(\"Database \\\"\".concat(dbName, \"\\\" created\"));\n      } else {\n        Object(_logger_js__WEBPACK_IMPORTED_MODULE_2__[\"logger\"])(\"Database \\\"\".concat(dbName, \"\\\" already exists\"));\n      }\n\n      Object(_taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"done\"])();\n    };\n  } // Adds newDB function to the task queue\n\n\n  function addDB(errorCallback) {\n    var args = [errorCallback];\n    var task = {\n      args: args,\n      fn: newDB\n    };\n    _taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"tasks\"].push(task);\n  } //// public functions declaration /////////////////\n\n\n  this.name;\n  this.setConsoleOff;\n  this.customTask;\n  this.aggregateFuncs;\n  this.execTasks;\n  this.setCustomOperator;\n  this.newStore;\n  this.openStore;\n  this.delStore;\n  this.destroy; //// Initialization ///////////////////////////////\n\n  qrySys.init();\n  addDB();\n  Object(_taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"execTasks\"])();\n};\n/**\r\n * Gets the database name.\r\n * @method window.Sixdb#name\r\n * @instance\r\n * @return Name of the database\r\n */\n\n\nSixdb.prototype.name = function () {\n  return dbName;\n};\n/**\r\n * Sets the consoleOff value.\r\n * @param  {boolean} _consoleOff If true, the console output is off and only errors appear in console.\r\n */\n\n\nSixdb.prototype.setConsoleOff = function (_consoleOff) {\n  consoleOff = _consoleOff;\n};\n/**\r\n * Add a specific function to the Sixdb task queue.\r\n * @method window.Sixdb#customTask\r\n * @instance\r\n * @param  {function} fn Our custom function that we want to add to the task queue.\r\n * @param  {object} context Usually the keyword \"this\"\r\n * @param  {...any} args Arguments for the function.\r\n * @example\r\n * var mydb = new Sixdb('companyDB');\r\n * \r\n * // Creates new store\r\n * mydb.newStore('southFactory');\r\n * \r\n * // Opens the store in a variable\r\n * var store = mydb.openStore('southFactory');\r\n *\r\n *\r\n * // Inserts one record in \"southFactory\" object store.\r\n * //\r\n * store.add(\r\n *    {ID: 1, name: 'Peter', department: 'manufacturing', age: 32, salary: 1200}\r\n * );\r\n *\r\n *\r\n * //\r\n * // To add an own function to the task queue, the method  customTask() of the Sixdb object is used\r\n * //\r\n * //     customTask( fn, context, args)\r\n * //\r\n * // This task is executed after the previous insertion task and before the next reading task.\r\n * //\r\n * mydb.customTask(\r\n *    function(m){                                // Custom function\r\n *        alert(m);\r\n *    },\r\n *    this,                                       // Context. Usually \"this\".\r\n *    'Inserting operation finished !!'           // Arguments of the function. Can be a variable number of arguments.\r\n * );\r\n *\r\n *\r\n *\r\n * // Reads all records from \"southFactory\" object store.\r\n * //\r\n * store.getAll(mySuccessCallback);\r\n *\r\n *\r\n * // ***** VERY IMPORTANT ****\r\n * // Once we have introduced the operations that we want to perform on the database,\r\n * // we must use the function execTasks() to execute them.\r\n * //\r\n * mydb.execTasks();\r\n */\n\n\nSixdb.prototype.customTask = function (fn, context, args) {\n  var argsArray = [];\n\n  if (args) {\n    for (var i = 2, j = arguments.length; i < j; i++) {\n      argsArray[2 - i] = arguments[i];\n    }\n  }\n\n  var task = {\n    type: 'custom',\n    fn: fn,\n    context: context,\n    args: argsArray\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"tasks\"].push(task);\n};\n/** \r\n * Contains predefined aggregate functions to use in aggregateFn method.<br>\r\n * The method aggregateFn accepts too custom functions.\r\n * \r\n * @memberof window.Sixdb\r\n * @namespace\r\n*/\n\n\nSixdb.prototype.aggregateFuncs = {\n  /**\r\n   * Sums two values\r\n   * @param  {string | number} actual Acumulated value\r\n   * @param  {string | number} selected Selected value\r\n   * @return {string | number} Returns the sum.\r\n   */\n  sum: function sum(actual, selected) {\n    return actual + selected;\n  },\n\n  /**\r\n   * Calculates the average value.\r\n   * @param  {number} actual Acumulated value.\r\n   * @param  {number} selected Selected value.\r\n   * @param  {number} counter Number of elements.\r\n   * @return {number} average value.\r\n   */\n  avg: function avg(actual, selected, counter) {\n    return (actual * (counter - 1) + selected) / counter;\n  },\n\n  /**\r\n   * Returns the maximum value.\r\n   * @param  {string | number} actual \r\n   * @param  {string | number} selected \r\n   * @return {string | number} The maximum value.\r\n   */\n  max: function max(actual, selected) {\n    return selected > actual ? selected : actual;\n  },\n\n  /**\r\n   * Returns the minimum value.\r\n   * @param  {string | number} actual \r\n   * @param  {string | number} selected \r\n   * @param  {number} counter Number of iteration.\r\n   * @return {string | number} The minimum value.\r\n   */\n  min: function min(actual, selected, counter) {\n    if (counter == 1) {\n      // First value of actual is null. Without this, min is allways null\n      actual = selected;\n    }\n\n    return selected < actual && counter > 1 ? selected : actual;\n  }\n};\n/**\r\n   * Sets customOperator. To make the queries we can add to the Sixdb comparison operators our own operator.<br>\r\n   * This operator will be represented by <b>~~</b>.\r\n   * @method window.Sixdb#setCustomOperator\r\n   * @instance\r\n   * @param  {function} compareFunction Function to compare a property value with a test value.<br>\r\n   * @example\r\n   * var mydb = new Sixdb('myDatabase');\r\n   *\r\n   * //\r\n   * // The compare function must have two arguments, property value and test value. If this function triggers\r\n   * // an error exception, then the query system returns the condition as false.\r\n   * //\r\n   * mydb.setCustomOperator(\r\n   *     function(propertyValue, testValue){\r\n   *         return (propertyValue.length == testValue.length);\r\n   *     });\r\n   *\r\n   */\n\nSixdb.prototype.setCustomOperator = function (compareFunction) {\n  if (compareFunction) {\n    if (typeof compareFunction == 'function') {\n      if (compareFunction.length == 2) {\n        customOperator = compareFunction;\n      }\n    }\n  }\n};\n/**\r\n   * Execs pending tasks. The tasks are executed sequentially.\r\n   * A task does not run until the previous one ends.\r\n   * <br>This avoids problems arising from the asynchronous nature of the indexedDB api.\r\n   * @method window.Sixdb#execTask\r\n   * @instance\r\n   */\n\n\nSixdb.prototype.execTasks = function () {\n  Object(_taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"execTasks\"])();\n};\n/**\r\n * Creates a task wich creates a store object in the database.\r\n * @method window.Sixdb#newStore\r\n * @instance\r\n * @param  {string} storeName The store name.\r\n * @param  {object} [options]\r\n * @param  {string} [options.keyPath] The key path to be used by the new object store. \r\n * <br>If empty or not specified, the object store is created without a key path and uses out-of-line keys. \r\n * <br>You can also pass in an array as a keyPath.\r\n * @param  {Boolean} [options.autoIncrement] If true, the object store has a key generator. Defaults to false.\r\n * @param  {function} [options.succesCallback] Function called on success. Receives as parameters event and origin.\r\n * @param  {function} [options.errorCallback] Optional function to handle errors. Receives an error object as argument.\r\n */\n\n\nSixdb.prototype.newStore = function (storeName) {\n  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      keyPath = _ref4.keyPath,\n      autoIncrement = _ref4.autoIncrement,\n      successCallback = _ref4.successCallback,\n      errorCallback = _ref4.errorCallback;\n\n  var args = [storeName, {\n    keyPath: keyPath,\n    autoIncrement: autoIncrement,\n    successCallback: successCallback,\n    errorCallback: errorCallback\n  }];\n  var task = {\n    args: args,\n    fn: newStore\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"tasks\"].push(tkOpen);\n  _taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"tasks\"].push(task);\n};\n/**\r\n * Returns an existing store object ready to use\r\n * @method window.Sixdb#openStore\r\n * @instance\r\n * @param  {string} storeName Name of the store.\r\n * @return {object}\r\n */\n\n\nSixdb.prototype.openStore = function (storeName) {\n  return new _sixdbStore__WEBPACK_IMPORTED_MODULE_4__[\"Store\"](storeName);\n};\n/**\r\n * Deletes an object store.\r\n * @method window.Sixdb#delStore\r\n * @instance\r\n * @param  {string} storeName Name of the object store. \r\n * @param  {object} options\r\n * @param  {function} [options.succesCallback] Function called on success. Receives as parameters event and origin.\r\n * @param  {function} [options.errorCallback] Optional function to handle errors. Receives an error object as argument.\r\n */\n\n\nSixdb.prototype.delStore = function (storeName) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref5$successCallback = _ref5.successCallback,\n      successCallback = _ref5$successCallback === void 0 ? voidFn : _ref5$successCallback,\n      _ref5$errorCallback = _ref5.errorCallback,\n      errorCallback = _ref5$errorCallback === void 0 ? voidFn : _ref5$errorCallback;\n\n  var options = {\n    successCallback: successCallback,\n    errorCallback: errorCallback\n  };\n  var args = [storeName, options];\n  var task = {\n    args: args,\n    fn: delStore\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"tasks\"].push(tkOpen);\n  _taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"tasks\"].push(task);\n};\n/**\r\n * The current database is deleted.\r\n * @method window.Sixdb#destroy\r\n * @instance\r\n * @param  {object} options\r\n * @param  {function} [options.succesCallback] Function called on success. Receives as parameters event and origin.\r\n * @param  {function} [options.errorCallback] Optional function to handle errors. Receives an error object as argument.\r\n */\n\n\nSixdb.prototype.destroy = function () {\n  var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref6$successCallback = _ref6.successCallback,\n      successCallback = _ref6$successCallback === void 0 ? voidFn : _ref6$successCallback,\n      _ref6$errorCallback = _ref6.errorCallback,\n      errorCallback = _ref6$errorCallback === void 0 ? voidFn : _ref6$errorCallback;\n\n  var options = {\n    successCallback: successCallback,\n    errorCallback: errorCallback\n  };\n  var args = [options];\n  var task = {\n    args: args,\n    fn: delDB\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_1__[\"tasks\"].push(task);\n};\n\n\n\n//# sourceURL=webpack:///./src/main.js?");

/***/ }),

/***/ "./src/qrySys.js":
/*!***********************!*\
  !*** ./src/qrySys.js ***!
  \***********************/
/*! exports provided: _qrySys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_qrySys\", function() { return _qrySys; });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main */ \"./src/main.js\");\n/* eslint-disable */\n\nvar _qrySys = {\n  init: function init() {\n    this.blockRgx = /\\(.*?(?=\\))/g;\n    this.blockOperatorRgx = /[\\&\\|]+(?=(\\s*\\())/g;\n    this.operatorRgx = /(=|>|<|>=|<=|!=|<>|\\^|\\$|~~)+/g;\n    this.rightOperandRgx = /(?:([=><\\^\\$~]))\\s*[\"']?[^\"']+[\"']?\\s*(?=[&\\|])|(?:[=><\\^\\$~])\\s*[\"']?[^\"']+[\"']?(?=$)/g;\n    this.leftOperandRgx = /([^\"'\\s])(\\w+)(?=\\s*[=|>|<|!|\\^|\\$~])/g;\n  },\n  makeConditionsBlocksArray: function makeConditionsBlocksArray(query) {\n    var t = this;\n    var conditionsBlocksArray = []; //// Gets blocks\n    //\n\n    var blocks = query.match(t.blockRgx); // Logical operators between blocks, all must be the same type\n\n    var extLogOperator = query.match(t.blockOperatorRgx) ? query.match(t.blockOperatorRgx) : null; // If condition is a single sentence like: \" a = 10 & b > 5 \"\n\n    if (!blocks) {\n      t.pushConditionBlockToArray(query, null, conditionsBlocksArray);\n      return conditionsBlocksArray;\n    } // Delete left parentheses\n\n\n    t.deleteLeftParentheses(blocks); // If condition is a multiple sentence like: \" (a = 5 & b = 10) || (c < 4 & f > 10) \"\n\n    if (extLogOperator) {\n      if (extLogOperator == '&' || extLogOperator == '&&') {\n        extLogOperator = 'and';\n      } else {\n        extLogOperator = 'or';\n      }\n    }\n\n    for (var i = 0; i < blocks.length; i++) {\n      t.pushConditionBlockToArray(blocks[i], extLogOperator, conditionsBlocksArray);\n    }\n\n    return conditionsBlocksArray;\n  },\n  deleteLeftParentheses: function deleteLeftParentheses(blocks) {\n    var size = blocks.length;\n\n    for (var i = 0; i < size; i++) {\n      blocks[i] = blocks[i].substr(1);\n    }\n  },\n  pushConditionBlockToArray: function pushConditionBlockToArray(query, extLogOperator, conditionsBlocksArray) {\n    var t = this;\n    var leftOperands = query.match(t.leftOperandRgx);\n    var rightOperands = query.match(t.rightOperandRgx);\n\n    for (var i = 0; i < rightOperands.length; i++) {\n      // Delete the operator\n      while (rightOperands[i][0].match(/[=><!\\^\\$~]/g)) {\n        rightOperands[i] = rightOperands[i].substr(1);\n      } // Delete quotes and trim white spaces\n\n\n      rightOperands[i] = rightOperands[i].replace(/[\"']/g, '').trim();\n    } //// Gets operators\n    //// Removing righ operands (values) before extract comparison operators avoids\n    //// problems with literal values that include comparisson symbols(= , >,...) quoted.\n    //\n\n\n    for (var _i = 0; _i < rightOperands.length; _i++) {\n      query = query.replace(rightOperands[_i], '');\n    }\n\n    var operators = query.match(t.operatorRgx);\n    var conditionsArray = []; // If query is like: \" c = 15 \"\n\n    if (leftOperands.length == 1) {\n      //{property, operator (=,>,<, ...), value}\n      conditionsArray.push({\n        keyPath: leftOperands[0],\n        cond: operators[0],\n        value: rightOperands[0]\n      });\n      conditionsBlocksArray.push({\n        conditionsArray: conditionsArray,\n        internalLogOperator: null,\n        externalLogOperator: extLogOperator\n      });\n      conditionsArray = null;\n    } else {\n      // if query is like: \" c = 15 & a > 30 \"\n      var logOperatorsType = query.match(/[\\&\\|]+/g)[0];\n\n      if (logOperatorsType == '&' || logOperatorsType == '&&') {\n        logOperatorsType = 'and';\n      } else {\n        logOperatorsType = 'or';\n      }\n\n      for (var _i2 = 0; _i2 < operators.length; _i2++) {\n        conditionsArray.push({\n          keyPath: leftOperands[_i2],\n          cond: operators[_i2],\n          value: rightOperands[_i2]\n        });\n      }\n\n      conditionsBlocksArray.push({\n        conditionsArray: conditionsArray,\n        internalLogOperator: logOperatorsType,\n        externalLogOperator: extLogOperator\n      });\n      conditionsArray = null;\n    } // end if else\n\n  },\n  testConditionBlock: function testConditionBlock(cursor, conditionsArray, operator) {\n    var t = this;\n    var test = operator == 'and' || !operator ? true : false;\n\n    for (var i = 0; i < conditionsArray.length; i++) {\n      test = t.testCondition(cursor.value[conditionsArray[i].keyPath], conditionsArray[i].cond, conditionsArray[i].value);\n      if ((operator == 'and' || !operator) && !test) return false;else if (operator == 'or' && test) return true;\n    }\n\n    return test;\n  },\n  testCondition: function testCondition(value1, condition, value2) {\n    var result;\n\n    switch (condition) {\n      case '=':\n        result = value1 == value2 ? true : false;\n        break;\n\n      case '>':\n        result = value1 > value2 ? true : false;\n        break;\n\n      case '<':\n        result = value1 < value2 ? true : false;\n        break;\n\n      case '>=':\n        result = value1 >= value2 ? true : false;\n        break;\n\n      case '<=':\n        result = value1 <= value2 ? true : false;\n        break;\n\n      case '!=':\n        result = value1 != value2 ? true : false;\n        break;\n\n      case '<>':\n        // string value1 contains substring value2\n        if (typeof value1 != 'string') {\n          return false;\n        }\n\n        result = value1.indexOf(value2) != -1;\n        break;\n\n      case '^':\n        if (typeof value1 != 'string') {\n          return false;\n        }\n\n        result = value1.indexOf(value2) == 0;\n        break;\n\n      case '$':\n        if (typeof value1 != 'string') {\n          return false;\n        }\n\n        result = value1.indexOf(value2) == value1.length - value2.length;\n        break;\n\n      case '~~':\n        //custom operator\n        try {\n          result = Object(_main__WEBPACK_IMPORTED_MODULE_0__[\"customOperator\"])(value1, value2);\n        } catch (e) {\n          result = false;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    return result;\n  }\n};\n\n//# sourceURL=webpack:///./src/qrySys.js?");

/***/ }),

/***/ "./src/sixdbIndex.js":
/*!***************************!*\
  !*** ./src/sixdbIndex.js ***!
  \***************************/
/*! exports provided: Index */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Index\", function() { return Index; });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main */ \"./src/main.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"./src/logger.js\");\n/* harmony import */ var _taskQueue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./taskQueue */ \"./src/taskQueue.js\");\n/* harmony import */ var _errorSys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errorSys */ \"./src/errorSys.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers */ \"./src/helpers.js\");\n/* harmony import */ var _qrySys__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./qrySys */ \"./src/qrySys.js\");\n\n\n\n\n\n //// Private variables //////////////////////////////\n\nvar _index = null;\nvar _storeName = '';\nvar _indexName = '';\nvar qrySys = _qrySys__WEBPACK_IMPORTED_MODULE_5__[\"_qrySys\"];\n\nfunction setIndex(origin, rwMode) {\n  _index = null;\n\n  try {\n    var objectStore = _main__WEBPACK_IMPORTED_MODULE_0__[\"db\"].transaction(_storeName, rwMode).objectStore(_storeName);\n    _index = objectStore.index(_indexName);\n  } catch (e) {\n    Object(_errorSys__WEBPACK_IMPORTED_MODULE_3__[\"makeErrorObject\"])(origin, e);\n    Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(_errorSys__WEBPACK_IMPORTED_MODULE_3__[\"lastErrorObj\"], true);\n  }\n\n  Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"done\"])();\n} // Adds setIndex to the task queue\n\n\nfunction initIndex(origin, rwMode) {\n  var args = [origin, rwMode];\n  var task = {\n    args: args,\n    fn: setIndex\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n} // Gets all records from a store\n\n\nfunction getAll(successCallback, errorCallback) {\n  var origin = 'Index.getAll()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n  var request = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"tryGetAll\"])(origin, _index, errorCallback);\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = function (event) {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestSuccessAction\"])(event.target.result, origin, successCallback, \"All records returned from index \\\"\".concat(_indexName, \"\\\"\"));\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Gets records filtered by a query\n\n\nfunction get(query, successCallback, errorCallback) {\n  var origin = 'Index.get()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n\n  if (Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"isKey\"])(query)) {\n    getBykey(query, successCallback, errorCallback);\n    return;\n  }\n\n  var resultFiltered = [];\n  var conditionsBlocksArray = qrySys.makeConditionsBlocksArray(query);\n  var extMode = conditionsBlocksArray ? conditionsBlocksArray[0].externalLogOperator : null;\n  var exitsInFirstTrue = extMode == null || extMode == 'and' ? false : true;\n  var obj = {\n    counter: 0,\n    source: _indexName,\n    extMode: extMode,\n    event: resultFiltered,\n    resultFiltered: resultFiltered,\n    origin: origin,\n    query: query,\n    conditionsBlocksArray: conditionsBlocksArray,\n    exitsInFirstTrue: exitsInFirstTrue,\n    logFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"queryLog\"],\n    cursorFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorGetRecords\"],\n    successCallback: successCallback\n  };\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"setSharedObj\"])(obj);\n  var request = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"tryOpenCursor\"])(origin, _index, errorCallback);\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = function (event) {\n    var cursor = event.target.result;\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorLoop\"])(cursor);\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Gets records with key as query\n\n\nfunction getBykey(query, successCallback, errorCallback) {\n  var origin = 'Index.getByKey()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n  var request = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"tryGetByKey\"])(origin, _index, query, errorCallback);\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = function (event) {\n    successCallback(event.target.result, origin, query);\n    _main__WEBPACK_IMPORTED_MODULE_0__[\"db\"].close();\n    Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(\"Records with key \\\"\".concat(query, \"\\\" returned from index \\\"\").concat(_indexName, \"\\\"\"));\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"done\"])();\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Counts records filtered by a query\n\n\nfunction count(query, successCallback, errorCallback) {\n  var origin = 'Index.count()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n\n  if (!query) {\n    countAll(successCallback, errorCallback);\n    return;\n  }\n\n  var conditionsBlocksArray = qrySys.makeConditionsBlocksArray(query);\n  var extMode = conditionsBlocksArray ? conditionsBlocksArray[0].externalLogOperator : null;\n  var exitsInFirstTrue = extMode == null || extMode == 'and' ? false : true; /// Object used by cursorLoop()\n\n  var obj = {\n    counter: 0,\n\n    get event() {\n      return this.counter;\n    },\n\n    source: _indexName,\n    extMode: extMode,\n    origin: origin,\n    query: query,\n    conditionsBlocksArray: conditionsBlocksArray,\n    exitsInFirstTrue: exitsInFirstTrue,\n    logFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"countLog\"],\n    cursorFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorCount\"],\n    successCallback: successCallback\n  };\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"setSharedObj\"])(obj);\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"initCursorLoop\"])(_index, errorCallback);\n} // Counts all records in the index\n\n\nfunction countAll(successCallback, errorCallback) {\n  var origin = 'Index.countAll()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n\n  var request = _index.count();\n\n  request.onsuccess = function (event) {\n    var message = \"\".concat(event.target.result, \" records in index \\\"\").concat(_indexName, \"\\\"\");\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestSuccessAction\"])(event.target.result, origin, successCallback, message);\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Apply a function (aggregatefn) to the values of a property.\n\n\nfunction getaggregateFunction(property, aggregatefn) {\n  var successCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"];\n  var origin = arguments.length > 3 ? arguments[3] : undefined;\n\n  var _ref = arguments.length > 4 ? arguments[4] : undefined,\n      query = _ref.query,\n      _ref$errorCallback = _ref.errorCallback,\n      errorCallback = _ref$errorCallback === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref$errorCallback;\n\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n  var commonArgs = {\n    origin: origin,\n    property: property,\n    aggregatefn: aggregatefn,\n    successCallback: successCallback,\n    errorCallback: errorCallback\n  };\n  if (!query) getaggregateFunctionA(commonArgs);else getAggregateFunctionB(query, commonArgs);\n}\n\nfunction getaggregateFunctionA(_ref2) {\n  var origin = _ref2.origin,\n      property = _ref2.property,\n      aggregatefn = _ref2.aggregatefn,\n      successCallback = _ref2.successCallback,\n      errorCallback = _ref2.errorCallback;\n  var actualValue = null;\n  var counter = 0;\n  var request = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"tryOpenCursor\"])(origin, _index, errorCallback);\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = function (event) {\n    var cursor = event.target.result;\n\n    if (cursor) {\n      if (cursor.value[property]) {\n        counter++;\n        actualValue = aggregatefn(actualValue, cursor.value[property], counter);\n      }\n\n      cursor.continue();\n    } else {\n      successCallback(actualValue, origin);\n      _main__WEBPACK_IMPORTED_MODULE_0__[\"db\"].close();\n      Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(\"Result of \".concat(origin, \" on property \\\"\").concat(property, \"\\\": \").concat(actualValue));\n      Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"done\"])();\n    }\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n}\n\nfunction getAggregateFunctionB(query, _ref3) {\n  var origin = _ref3.origin,\n      property = _ref3.property,\n      aggregatefn = _ref3.aggregatefn,\n      successCallback = _ref3.successCallback,\n      errorCallback = _ref3.errorCallback;\n\n  if (Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"isKey\"])(query)) {\n    query = _index.keyPath + '=' + query;\n  }\n\n  var conditionsBlocksArray = qrySys.makeConditionsBlocksArray(query);\n  var extMode = conditionsBlocksArray ? conditionsBlocksArray[0].externalLogOperator : null;\n  var exitsInFirstTrue = extMode == null || extMode == 'and' ? false : true;\n  var obj = {\n    counter: 0,\n    actualValue: null,\n\n    get event() {\n      return this.actualValue;\n    },\n\n    property: property,\n    aggregatefn: aggregatefn,\n    extMode: extMode,\n    origin: origin,\n    query: query,\n    conditionsBlocksArray: conditionsBlocksArray,\n    exitsInFirstTrue: exitsInFirstTrue,\n    logFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"aggregateLog\"],\n    cursorFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorAggregate\"],\n    successCallback: successCallback\n  };\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"setSharedObj\"])(obj); /// request definition\n\n  var request = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"tryOpenCursor\"])(origin, _index, errorCallback);\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = function (event) {\n    var cursor = event.target.result;\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorLoop\"])(cursor);\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Adds getaggregateFunction() to the task queue\n\n\nfunction makeAggregateTask(_ref4) {\n  var property = _ref4.property,\n      successCallback = _ref4.successCallback,\n      aggregatefn = _ref4.aggregatefn,\n      origin = _ref4.origin,\n      query = _ref4.query,\n      errorCallback = _ref4.errorCallback;\n  var options = {\n    query: query,\n    errorCallback: errorCallback\n  };\n  var args = [property, aggregatefn, successCallback, origin, options];\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push({\n    args: args,\n    fn: getaggregateFunction\n  });\n}\n/**\r\n * Constructs a Sixdb Index instance. This constructor is used via Store.openStore() method.\r\n * @class\r\n * @param  {string} storeName Name of the parent store.\r\n * @param  {string} indexName Name of the index.\r\n * @return {object}\r\n */\n\n\nvar Index = function Index(storeName, indexName) {\n  _storeName = storeName;\n  _indexName = indexName;\n  this.name = indexName;\n  this.getAll;\n  this.get;\n  this.count;\n  this.aggregateFn;\n};\n/**\r\n * Gets all records from the index.\r\n * @method Index#getAll\r\n * @instance\r\n * @param  {function} successCallback Function called on success. Receives event and origin as parameters.\r\n * @param  {function} [errorCallback] Function to handle errors. Receives an error object as argument.\r\n * @example\r\n * const mydb = new Sixdb('myDatabase');\r\n * \r\n * // Instantiates the store \"southFactory\"\r\n * //\r\n * let store = mydb.openStore('southFactory');\r\n * \r\n * // Instantiates the index \"Names\"\r\n * //\r\n * let index = store.openIndex('Names');\r\n * \r\n * // An example of object stored in the object store\r\n * //\r\n * let person = {\r\n *     name: 'Peter',\r\n *     age: 32,\r\n *     salary: 1100\r\n * };\r\n *\r\n *\r\n * //\r\n * // Callback function to process the result\r\n * //\r\n * const myCallback = function(result){\r\n *\r\n *     if(Array.isArray(result)){\r\n *         for(let i = 0, j = result.length; i < j; i++)\r\n *         console.log(`Name: ${result[i].name} Age: ${result[i].age} Salary: ${result[i].salary}\\n`);\r\n *     } else {\r\n *         console.log(`Name: ${result.name} Age: ${result.age} Salary:{result.salary}`);\r\n *     }\r\n * };\r\n *\r\n *\r\n * //\r\n * // Gets all records from the index \"Names\" in store \"southFactory\"\r\n * //\r\n * index.getAll(myCallback);\r\n *  \r\n *\r\n *\r\n * // Execs all pending tasks\r\n * mydb.execTasks();\r\n*/\n\nIndex.prototype.getAll = function (successCallback) {\n  var errorCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"];\n  var args = [successCallback, errorCallback];\n  var task = {\n    args: args,\n    fn: getAll\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  initIndex('Index.getAll()', 'readonly');\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n};\n/**\r\n * Gets one or more records from an index using a query.\r\n * @method Index#get\r\n * @instance\r\n * @param  {query} query The query to select the records.\r\n * @param  {function} successCallback Function called on success. Receives event and origin as parameters.\r\n * @param  {function} [errorCallback] Function to handle errors. Receives an error object as argument.\r\n * @example\r\n * // An example of object stored in the object store\r\n * //\r\n * let person = {\r\n *     name: 'Peter',\r\n *     age: 32,\r\n *     salary: 1100\r\n * };\r\n * \r\n * const mydb = new Sixdb('myDatabase');\r\n * \r\n * // Instantiates the store \"southFactory\"\r\n * //\r\n * let store = mydb.openStore('southFactory');\r\n * \r\n * // Instantiates the index \"Names\"\r\n * //\r\n * let index = store.openIndex('Names');\r\n * \r\n * // Gets all records with salary > 1200 and age < 40 in index \"Names\"\r\n * //\r\n * index.get('salary > 1200 & age < 40', mySuccesCallback);\r\n * \r\n * mydb.execTasks();\r\n * \r\n */\n\n\nIndex.prototype.get = function (query, successCallback) {\n  var errorCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"];\n  var args = [query, successCallback, errorCallback];\n  var task = {\n    args: args,\n    fn: get\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  initIndex('Index.get()', 'readonly');\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n};\n/**\r\n * Counts the records in an index.\r\n * @method Index#count\r\n * @instance\r\n * @param  {function} successCallback Function called on success. Receives result (number), origin and query as parameters.\r\n * @param  {object} [options] \r\n * @param  {query} [options.query] The query used to select the records to count.Array\r\n * @param  {function} [options.errorCallback] Function to handle errors. Receives an error object as argument.\r\n */\n\n\nIndex.prototype.count = function (successCallback) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      query = _ref5.query,\n      _ref5$errorCallback = _ref5.errorCallback,\n      errorCallback = _ref5$errorCallback === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref5$errorCallback;\n\n  var args = [query, successCallback, errorCallback];\n  var task = {\n    args: args,\n    fn: count\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  initIndex('Index.count()', 'readonly');\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n};\n/**\r\n * Iterates the index by applying a function to each record in a specified property.\r\n * @method Index#aggregateFn\r\n * @instance\r\n * @param  {string} property Represents the column to apply the aggregate function.\r\n * @param  {aggregateFunction} aggregatefn Function applied over the records. \r\n * @param  {function} successCallback Function called on success. Receives result, origin and query as parameters.\r\n * @param  {object} [options]\r\n * @param  {query} [options.query] The query used to select records.errorCallback.\r\n * @param  {function} [options.errorCallback] Function to handle errors. Receives an error object as argument.\r\n * @example\r\n * // An example of object stored in the object store\r\n * //\r\n * let person = {\r\n *     name: 'Peter',\r\n *     age: 32,\r\n *     salary: 1100\r\n * };\r\n * \r\n * const mydb = new Sixdb('myDatabase');\r\n * \r\n * // Instantiates the store \"southFactory\"\r\n * //\r\n * let store = mydb.openStore('southFactory');\r\n * \r\n * // Instantiates the index \"Names\"\r\n * //\r\n * let index = store.openIndex('Names');\r\n * \r\n * // Sends to mySuccesCallback the average age of employees with salary highter than 1500\r\n * //\r\n * index.aggregateFn('age', mydb.aggregateFuncs.avg, mySuccesCallback, {query: 'salary > 1500'});\r\n * \r\n * mydb.execTasks();\r\n */\n\n\nIndex.prototype.aggregateFn = function (property, aggregatefn, successCallback) {\n  var _ref6 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      query = _ref6.query,\n      errorCallback = _ref6.errorCallback;\n\n  var origin = 'Index.aggregateFn()';\n  var args = {\n    property: property,\n    successCallback: successCallback,\n    aggregatefn: aggregatefn,\n    origin: origin,\n    query: query,\n    errorCallback: errorCallback\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  initIndex('initStore', 'readonly');\n  makeAggregateTask(args);\n};\n\n//# sourceURL=webpack:///./src/sixdbIndex.js?");

/***/ }),

/***/ "./src/sixdbStore.js":
/*!***************************!*\
  !*** ./src/sixdbStore.js ***!
  \***************************/
/*! exports provided: Store */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Store\", function() { return Store; });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main */ \"./src/main.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"./src/logger.js\");\n/* harmony import */ var _taskQueue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./taskQueue */ \"./src/taskQueue.js\");\n/* harmony import */ var _errorSys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errorSys */ \"./src/errorSys.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers */ \"./src/helpers.js\");\n/* harmony import */ var _qrySys_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./qrySys.js */ \"./src/qrySys.js\");\n/* harmony import */ var _sixdbIndex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sixdbIndex */ \"./src/sixdbIndex.js\");\n\n\n\n\n\n\n //// Private variables //////////////////////////////\n\nvar _store;\n\nvar qrySys = _qrySys_js__WEBPACK_IMPORTED_MODULE_5__[\"_qrySys\"];\n\nfunction setStore(origin, storeName, rwMode) {\n  _store = null;\n\n  try {\n    _store = _main__WEBPACK_IMPORTED_MODULE_0__[\"db\"].transaction(storeName, rwMode).objectStore(storeName);\n  } catch (e) {\n    Object(_errorSys__WEBPACK_IMPORTED_MODULE_3__[\"makeErrorObject\"])(origin, e);\n    Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(_errorSys__WEBPACK_IMPORTED_MODULE_3__[\"lastErrorObj\"], true);\n  }\n\n  Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"done\"])();\n} // Puts setStore() in task queue\n\n\nfunction initStore(origin, storeName, rwMode) {\n  var args = [origin, storeName, rwMode];\n  var task = {\n    args: args,\n    fn: setStore\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n} //// Private functions //////////////////////////////\n// Creates a new index in the store\n\n\nfunction newIndex(storeName, indexName, keyPath) {\n  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      unique = _ref.unique,\n      _ref$successCallback = _ref.successCallback,\n      successCallback = _ref$successCallback === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref$successCallback,\n      _ref$errorCallback = _ref.errorCallback,\n      errorCallback = _ref$errorCallback === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref$errorCallback;\n\n  var version;\n  var origin = 'Store.newIndex()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin); //// Gets the new version\n  //\n\n  version = _main__WEBPACK_IMPORTED_MODULE_0__[\"db\"].version;\n  _main__WEBPACK_IMPORTED_MODULE_0__[\"db\"].close();\n  var newVersion = version + 1; //// The change of the database schema only can be performed in the onupgradedneeded event\n  //// so a new version number is needed to trigger that event.\n  //\n\n  var request = window.indexedDB.open(_main__WEBPACK_IMPORTED_MODULE_0__[\"dbName\"], newVersion);\n\n  request.onupgradeneeded = function (event) {\n    var _db = event.target.result;\n    Object(_main__WEBPACK_IMPORTED_MODULE_0__[\"setDb\"])(_db);\n    var _store = null;\n    var upgradeTransaction = event.target.transaction; //// Gets store\n\n    try {\n      _store = upgradeTransaction.objectStore(storeName);\n    } catch (e) {\n      Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, e, errorCallback);\n      return;\n    }\n\n    if (!_store.indexNames.contains(indexName)) {\n      _store.createIndex(indexName, keyPath, {\n        unique: unique\n      });\n    } else {\n      _db.close();\n\n      Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(\"The index \\\"\".concat(indexName, \"\\\" already exists in store \\\"\").concat(storeName, \"\\\"\"));\n      Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"done\"])();\n    }\n  };\n\n  request.onsuccess = function (event) {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestSuccessAction\"])(event, origin, successCallback, \"Index \\\"\".concat(indexName, \"\\\" created in store \\\"\").concat(storeName, \"\\\"\"));\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Adds one(A) or more(B) records to the store\n\n\nfunction addRecord(obj, _ref2) {\n  var _ref2$successCallback = _ref2.successCallback,\n      successCallback = _ref2$successCallback === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref2$successCallback,\n      _ref2$errorCallback = _ref2.errorCallback,\n      errorCallback = _ref2$errorCallback === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref2$errorCallback;\n  var origin = 'Store.add()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n  var args = {\n    obj: obj,\n    origin: origin,\n    successCallback: successCallback,\n    errorCallback: errorCallback\n  };\n\n  if (Array.isArray(obj)) {\n    addRecordA(args);\n  } else {\n    addRecordB(args);\n  }\n}\n\nfunction addRecordA(_ref3) {\n  var obj = _ref3.obj,\n      origin = _ref3.origin,\n      successCallback = _ref3.successCallback,\n      errorCallback = _ref3.errorCallback;\n  var objSize = obj.length;\n  var counter = 0;\n\n  var _loop = function _loop() {\n    var request = _store.add(obj[counter]);\n\n    counter++;\n\n    request.onerror = function () {\n      Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n    };\n  };\n\n  while (counter < objSize) {\n    _loop();\n  }\n\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestSuccessAction\"])(event, origin, successCallback, \"New record/s added to store \\\"\".concat(_store.name, \"\\\"\"));\n}\n\nfunction addRecordB(_ref4) {\n  var obj = _ref4.obj,\n      origin = _ref4.origin,\n      successCallback = _ref4.successCallback,\n      errorCallback = _ref4.errorCallback;\n\n  var request = _store.add(obj);\n\n  request.onsuccess = function (event) {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestSuccessAction\"])(event, origin, successCallback, \"New record/s added to store \\\"\".concat(_store.name, \"\\\"\"));\n  };\n\n  request.onerror = function (event) {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, event.target.error, errorCallback);\n  };\n} // Gets all records from a store\n\n\nfunction getAll(successCallback, errorCallback) {\n  var request = null;\n  var origin = 'Store.getAll()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin); /// Callbacks of request\n\n  var onsuccess = function onsuccess(event) {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestSuccessAction\"])(event.target.result, origin, successCallback, \"All records returned from store \\\"\".concat(_store.name, \"\\\"\"));\n  };\n\n  var onerror = function onerror() {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  }; /// Request definition\n\n\n  request = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"tryGetAll\"])(origin, _store, errorCallback);\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = onsuccess;\n  request.onerror = onerror;\n} // Gets records filtered by a query\n\n\nfunction get(query, successCallback, errorCallback) {\n  var origin = 'Store.get()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n\n  if (Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"isKey\"])(query)) {\n    getBykey(query, successCallback, errorCallback);\n    return;\n  }\n\n  var resultFiltered = [];\n  var conditionsBlocksArray = qrySys.makeConditionsBlocksArray(query);\n  var extMode = conditionsBlocksArray ? conditionsBlocksArray[0].externalLogOperator : null;\n  var exitsInFirstTrue = extMode == null || extMode == 'and' ? false : true;\n  var obj = {\n    counter: 0,\n    source: _store.name,\n    extMode: extMode,\n    event: resultFiltered,\n    resultFiltered: resultFiltered,\n    origin: origin,\n    query: query,\n    conditionsBlocksArray: conditionsBlocksArray,\n    exitsInFirstTrue: exitsInFirstTrue,\n    logFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"queryLog\"],\n    cursorFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorGetRecords\"],\n    successCallback: successCallback\n  };\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"setSharedObj\"])(obj);\n  var request = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"tryOpenCursor\"])(origin, _store, errorCallback);\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = function (event) {\n    var cursor = event.target.result;\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorLoop\"])(cursor);\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Gets records with key as query\n\n\nfunction getBykey(query, successCallback, errorCallback) {\n  var origin = 'Store.getByKey()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n  var request;\n\n  var onsuccess = function onsuccess(event) {\n    successCallback(event.target.result, origin, query);\n    _main__WEBPACK_IMPORTED_MODULE_0__[\"db\"].close();\n    Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(\"Records with key \\\"\".concat(query, \"\\\" returned from store \\\"\").concat(_store.name, \"\\\"\"));\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"done\"])();\n  };\n\n  var onerror = function onerror() {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n\n  request = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"tryGetByKey\"])(origin, _store, query, errorCallback);\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = onsuccess;\n  request.onerror = onerror;\n} // Deletes one or more records using a query\n\n\nfunction del(query, successCallback, errorCallback) {\n  var origin = 'Store.del()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n\n  if (Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"isKey\"])(query)) {\n    delByKey(query, successCallback, errorCallback);\n    return;\n  }\n\n  var request = null;\n  var conditionsBlocksArray = qrySys.makeConditionsBlocksArray(query);\n  var extMode = conditionsBlocksArray ? conditionsBlocksArray[0].externalLogOperator : null;\n  var exitsInFirstTrue = extMode == null || extMode == 'and' ? false : true;\n  var obj = {\n    counter: 0,\n    extMode: extMode,\n    source: _store.name,\n    event: event,\n    origin: origin,\n    query: query,\n    conditionsBlocksArray: conditionsBlocksArray,\n    exitsInFirstTrue: exitsInFirstTrue,\n    logFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"queryLog\"],\n    cursorFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorDelRecords\"],\n    successCallback: successCallback\n  };\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"setSharedObj\"])(obj);\n  request = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"tryOpenCursor\"])(origin, _store, errorCallback);\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = function (event) {\n    var cursor = event.target.result;\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorLoop\"])(cursor);\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Deletes records using primary key as query. Is more fast.\n\n\nfunction delByKey(query, successCallback, errorCallback) {\n  var origin = 'Store.delByKey()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n\n  var request = _store.delete(query);\n\n  request.onsuccess = function (event) {\n    successCallback(event, origin, query);\n    _main__WEBPACK_IMPORTED_MODULE_0__[\"db\"].close();\n    Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(\"Records with primary key \\\"\".concat(query, \"\\\" deleted from store \\\"\").concat(_store.name, \"\\\"\"));\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"done\"])();\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Counts records filtered by a query\n\n\nfunction count(query, successCallback, errorCallback) {\n  var origin = 'Store.count()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n\n  if (!query) {\n    countAll(successCallback, errorCallback);\n    return;\n  }\n\n  var conditionsBlocksArray = qrySys.makeConditionsBlocksArray(query);\n  var extMode = conditionsBlocksArray ? conditionsBlocksArray[0].externalLogOperator : null;\n  var exitsInFirstTrue = extMode == null || extMode == 'and' ? false : true; /// Object used by cursorLoop()\n\n  var obj = {\n    counter: 0,\n\n    get event() {\n      return this.counter;\n    },\n\n    source: _store.name,\n    extMode: extMode,\n    origin: origin,\n    query: query,\n    conditionsBlocksArray: conditionsBlocksArray,\n    exitsInFirstTrue: exitsInFirstTrue,\n    logFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"countLog\"],\n    cursorFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorCount\"],\n    successCallback: successCallback\n  };\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"setSharedObj\"])(obj);\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"initCursorLoop\"])(_store, errorCallback);\n} // Counts all records in the store\n\n\nfunction countAll(successCallback, errorCallback) {\n  var origin = 'Store.countAll()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n\n  var request = _store.count();\n\n  request.onsuccess = function (event) {\n    var message = \"\".concat(event.target.result, \" records in store \\\"\").concat(_store.name, \"\\\"\");\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestSuccessAction\"])(event.target.result, origin, successCallback, message);\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Deletes an index\n\n\nfunction delIndex(storeName, indexName, successCallback, errorCallback) {\n  var version;\n  var origin = 'Store.delIndex()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin); //// Gets the new version\n  //\n\n  version = _main__WEBPACK_IMPORTED_MODULE_0__[\"db\"].version;\n  _main__WEBPACK_IMPORTED_MODULE_0__[\"db\"].close();\n  var newVersion = version + 1; //// The change of the database schema only can be performed in the onupgradedneeded event\n  //// so a new version number is needed to trigger that event.\n  //\n\n  var request = window.indexedDB.open(_main__WEBPACK_IMPORTED_MODULE_0__[\"dbName\"], newVersion);\n\n  request.onupgradeneeded = function (event) {\n    var _db = event.target.result;\n    Object(_main__WEBPACK_IMPORTED_MODULE_0__[\"setDb\"])(_db);\n    var _store = null;\n    var upgradeTransaction = event.target.transaction; //// Gets store\n\n    try {\n      _store = upgradeTransaction.objectStore(storeName);\n    } catch (e) {\n      Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, e, errorCallback);\n      return;\n    }\n\n    _store.deleteIndex(indexName);\n  };\n\n  request.onsuccess = function (event) {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestSuccessAction\"])(event, origin, successCallback, \"Index \\\"\".concat(indexName, \"\\\" deleted from object store \\\"\").concat(storeName, \"\\\"\"));\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Apply a function (aggregatefn) to the values of a property.\n\n\nfunction getaggregateFunction(property, aggregatefn) {\n  var successCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"];\n  var origin = arguments.length > 3 ? arguments[3] : undefined;\n\n  var _ref5 = arguments.length > 4 ? arguments[4] : undefined,\n      query = _ref5.query,\n      _ref5$errorCallback = _ref5.errorCallback,\n      errorCallback = _ref5$errorCallback === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref5$errorCallback;\n\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin);\n  var commonArgs = {\n    origin: origin,\n    property: property,\n    aggregatefn: aggregatefn,\n    successCallback: successCallback,\n    errorCallback: errorCallback\n  };\n  if (!query) getaggregateFunctionA(commonArgs);else getAggregateFunctionB(query, commonArgs);\n}\n\nfunction getaggregateFunctionA(_ref6) {\n  var origin = _ref6.origin,\n      property = _ref6.property,\n      aggregatefn = _ref6.aggregatefn,\n      successCallback = _ref6.successCallback,\n      errorCallback = _ref6.errorCallback;\n  var actualValue = null;\n  var counter = 0;\n  var request = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"tryOpenCursor\"])(origin, _store, errorCallback);\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = function (event) {\n    var cursor = event.target.result;\n\n    if (cursor) {\n      if (cursor.value[property]) {\n        counter++;\n        actualValue = aggregatefn(actualValue, cursor.value[property], counter);\n      }\n\n      cursor.continue();\n    } else {\n      successCallback(actualValue, origin);\n      _main__WEBPACK_IMPORTED_MODULE_0__[\"db\"].close();\n      Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(\"Result of \".concat(origin, \" on property \\\"\").concat(property, \"\\\": \").concat(actualValue));\n      Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"done\"])();\n    }\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n}\n\nfunction getAggregateFunctionB(query, _ref7) {\n  var origin = _ref7.origin,\n      property = _ref7.property,\n      aggregatefn = _ref7.aggregatefn,\n      successCallback = _ref7.successCallback,\n      errorCallback = _ref7.errorCallback;\n\n  if (Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"isKey\"])(query)) {\n    query = _store.keyPath + '=' + query;\n  }\n\n  var conditionsBlocksArray = qrySys.makeConditionsBlocksArray(query);\n  var extMode = conditionsBlocksArray ? conditionsBlocksArray[0].externalLogOperator : null;\n  var exitsInFirstTrue = extMode == null || extMode == 'and' ? false : true;\n  var obj = {\n    counter: 0,\n    actualValue: null,\n\n    get event() {\n      return this.actualValue;\n    },\n\n    property: property,\n    aggregatefn: aggregatefn,\n    extMode: extMode,\n    origin: origin,\n    query: query,\n    conditionsBlocksArray: conditionsBlocksArray,\n    exitsInFirstTrue: exitsInFirstTrue,\n    logFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"aggregateLog\"],\n    cursorFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorAggregate\"],\n    successCallback: successCallback\n  };\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"setSharedObj\"])(obj); /// request definition\n\n  var request = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"tryOpenCursor\"])(origin, _store, errorCallback); //store.openCursor();\n\n  if (!request) {\n    Object(_taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"checkTasks\"])();\n    return;\n  }\n\n  request.onsuccess = function (event) {\n    var cursor = event.target.result;\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorLoop\"])(cursor);\n  };\n\n  request.onerror = function () {\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"requestErrorAction\"])(origin, request.error, errorCallback);\n  };\n} // Adds getaggregateFunction() to the task queue\n\n\nfunction makeAggregateTask(_ref8) {\n  var property = _ref8.property,\n      successCallback = _ref8.successCallback,\n      aggregatefn = _ref8.aggregatefn,\n      origin = _ref8.origin,\n      query = _ref8.query,\n      errorCallback = _ref8.errorCallback;\n  var options = {\n    query: query,\n    errorCallback: errorCallback\n  };\n  var args = [property, aggregatefn, successCallback, origin, options];\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push({\n    args: args,\n    fn: getaggregateFunction\n  });\n} // Updates one or more records\n\n\nfunction update(query, objectValues, _ref9) {\n  var successCallback = _ref9.successCallback,\n      errorCallback = _ref9.errorCallback;\n  var origin = 'Store.update()';\n  Object(_logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"])(origin + _logger__WEBPACK_IMPORTED_MODULE_1__[\"logEnum\"].begin); //// Gets isIndexKeyValue\n  //// If true then is query is a single value (an index key)\n\n  var isIndexKeyValue = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"isKey\"])(query);\n\n  if (isIndexKeyValue) {\n    // If query is a single number value then is mofied to be valid to the query system\n    query = _store.keyPath + '=' + query;\n  }\n\n  var conditionsBlocksArray = qrySys.makeConditionsBlocksArray(query);\n  var extMode = conditionsBlocksArray ? conditionsBlocksArray[0].externalLogOperator : null;\n  var exitsInFirstTrue = extMode == null || extMode == 'and' ? false : true;\n  var obj = {\n    counter: 0,\n    keys: Object.keys(objectValues),\n    newObjectValuesSize: Object.keys(objectValues).length,\n    extMode: extMode,\n    objectValues: objectValues,\n    event: event,\n    origin: origin,\n    query: query,\n    conditionsBlocksArray: conditionsBlocksArray,\n    exitsInFirstTrue: exitsInFirstTrue,\n    logFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"queryLog\"],\n    cursorFunction: _helpers__WEBPACK_IMPORTED_MODULE_4__[\"cursorUpdate\"],\n    successCallback: successCallback\n  };\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"setSharedObj\"])(obj);\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"initCursorLoop\"])(_store, errorCallback);\n}\n/**\r\n * Constructs a Sixdb Store instance. This constructor is used via Sixdb.openStore() method.\r\n * @class\r\n * @param  {string} storeName Name of the object store\r\n * @return {object}\r\n */\n\n\nvar Store = function Store(storeName) {\n  //// Public properties ////////////////////////////\n  this.name = storeName; //// Public Methods declaration ///////////////////\n\n  this.newIndex;\n  this.openIndex;\n  this.delIndex;\n  this.add;\n  this.getAll;\n  this.get;\n  this.del;\n  this.count;\n  this.aggregateFn;\n  this.update;\n};\n/**\r\n * Creates a new index in the object store.\r\n * @method Store#newIndex\r\n * @instance\r\n * @param  {string} indexName Name of the new index.\r\n * @param  {string} keyPath Name of the property used as key.\r\n * @param  {object} [options]\r\n * @param  {boolean} [options.unique] If true, the index will not allow duplicate values for a single key.\r\n * @param  {function} [options.successCallback] Function called on success. Receives event and origin as parameters.\r\n * @param  {function} [options.errorCallback] Function to handle errors. Receives an error object as argument.\r\n */\n\nStore.prototype.newIndex = function (indexName, keyPath) {\n  var _ref10 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      unique = _ref10.unique,\n      successCallback = _ref10.successCallback,\n      errorCallback = _ref10.errorCallback;\n\n  var args = [this.name, indexName, keyPath, {\n    unique: unique,\n    successCallback: successCallback,\n    errorCallback: errorCallback\n  }];\n  var task = {\n    args: args,\n    fn: newIndex\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n};\n\nStore.prototype.openIndex = function (indexName) {\n  return new _sixdbIndex__WEBPACK_IMPORTED_MODULE_6__[\"Index\"](this.name, indexName);\n};\n/**\r\n * Adds one or more records to the object store.\r\n * @method Store#add\r\n * @instance\r\n * @param  {object | object[]} obj A single object or an array of objects wich represents the records.\r\n * @param  {object} [options]\r\n * @param  {function} [options.successCallback] Function called on success. Receives event and origin as parameters.\r\n * @param  {function} [options.errorCallback] Function to handle errors. Receives an error object as argument.\r\n * @example\r\n * var mydb = new Sixdb('myDatabase');\r\n * \r\n * // Instantiates the store \"southFactory\"\r\n * var store = mydb.openStore('southFactory');\r\n *\r\n * // Object to insert in the object store\r\n * //\r\n * var person = {\r\n *     name: 'Peter',\r\n *     age: 32\r\n * }\r\n *\r\n * // Callback function to process a possible error\r\n * //\r\n * var myErrorCallback = function(e){\r\n *     console.log(e);\r\n * }\r\n *\r\n *\r\n * //\r\n * // Inserts a new record in the object store.\r\n * //\r\n * store.add( person, { errorCallback: myErrorCallback });\r\n *\r\n *\r\n * // Execs all pending tasks.\r\n * //\r\n * mydb.execTasks();\r\n */\n\n\nStore.prototype.add = function (obj) {\n  var _ref11 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      successCallback = _ref11.successCallback,\n      errorCallback = _ref11.errorCallback;\n\n  var args = [obj, {\n    successCallback: successCallback,\n    errorCallback: errorCallback\n  }];\n  var task = {\n    args: args,\n    fn: addRecord\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  initStore('store.add(...)', this.name, 'readwrite');\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n};\n/**\r\n * Gets all records from the object store.\r\n * @method Store#getAll\r\n * @instance\r\n * @param  {function} successCallback Function called on success. Receives event and origin as parameters.\r\n * @param  {function} [errorCallback] Function to handle errors. Receives an error object as argument.\r\n * @example\r\n * const mydb = new Sixdb('myDatabase');\r\n * \r\n * // Instantiates the store \"southFactory\"\r\n * //\r\n * let store = mydb.openStore('southFactory');\r\n * \r\n * // An example of object stored in the object store\r\n * //\r\n * let person = {\r\n *     name: 'Peter',\r\n *     age: 32,\r\n *     salary: 1100\r\n * };\r\n *\r\n *\r\n * //\r\n * // Callback function to process the result\r\n * //\r\n * const myCallback = function(result){\r\n *\r\n *     if(Array.isArray(result)){\r\n *         for(let i = 0, j = result.length; i < j; i++)\r\n *         console.log(`Name: ${result[i].name} Age: ${result[i].age} Salary: ${result[i].salary}\\n`);\r\n *     } else {\r\n *         console.log(`Name: ${result.name} Age: ${result.age} Salary:{result.salary}`);\r\n *     }\r\n * };\r\n *\r\n *\r\n * //\r\n * // Gets all records from the store \"southFactory\"\r\n * //\r\n * store.getAll(myCallback);\r\n *  \r\n *\r\n *\r\n * // Execs all pending tasks\r\n * mydb.execTasks();\r\n*/\n\n\nStore.prototype.getAll = function (successCallback) {\n  var errorCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"];\n  var args = [successCallback, errorCallback];\n  var task = {\n    args: args,\n    fn: getAll\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  initStore('store.getAll()', this.name, 'readonly');\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n};\n/**\r\n * Gets one or more records from store using a query.\r\n * @method Store#get\r\n * @instance\r\n * @param  {query} query The query to select the records.\r\n * @param  {function} successCallback Function called on success. Receives event and origin as parameters.\r\n * @param  {function} [errorCallback] Function to handle errors. Receives an error object as argument.\r\n * @example\r\n * // An example of object stored in the object store\r\n * //\r\n * let person = {\r\n *     name: 'Peter',\r\n *     age: 32,\r\n *     salary: 1100\r\n * };\r\n * \r\n * const mydb = new Sixdb('myDatabase');\r\n * \r\n * // Instantiates the store \"southFactory\"\r\n * //\r\n * let store = mydb.openStore('southFactory');\r\n * \r\n * // Gets all records with salary > 1200 and age < 40\r\n * //\r\n * store.get('salary > 1200 & age < 40', mySuccesCallback);\r\n * \r\n * mydb.execTasks();\r\n * \r\n */\n\n\nStore.prototype.get = function (query, successCallback) {\n  var errorCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"];\n  var args = [query, successCallback, errorCallback];\n  var task = {\n    args: args,\n    fn: get\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  initStore('store.get()', this.name, 'readonly');\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n};\n/**\r\n * Deletes one or more records from the store using a query.\r\n * @method Store#del\r\n * @instance\r\n * @param  {query} query \r\n * @param  {object} [options]\r\n * @param  {function} [options.successCallback] Function called on success. Receives event and origin as parameters.\r\n * @param  {function} [options.errorCallback] Function to handle errors. Receives an error object as argument.\r\n */\n\n\nStore.prototype.del = function (query) {\n  var _ref12 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref12$successCallbac = _ref12.successCallback,\n      successCallback = _ref12$successCallbac === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref12$successCallbac,\n      _ref12$errorCallback = _ref12.errorCallback,\n      errorCallback = _ref12$errorCallback === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref12$errorCallback;\n\n  var args = [query, successCallback, errorCallback];\n  var task = {\n    args: args,\n    fn: del\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  initStore('store.del()', this.name, 'readwrite');\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n};\n/**\r\n * Counts the records in the store.\r\n * @method Store#count\r\n * @instance\r\n * @param  {function} successCallback Function called on success. Receives result (number), origin and query as parameters.\r\n * @param  {object} [options] \r\n * @param  {query} [options.query] The query used to select the records to count.Array\r\n * @param  {function} [options.errorCallback] Function to handle errors. Receives an error object as argument.\r\n */\n\n\nStore.prototype.count = function (successCallback) {\n  var _ref13 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      query = _ref13.query,\n      _ref13$errorCallback = _ref13.errorCallback,\n      errorCallback = _ref13$errorCallback === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref13$errorCallback;\n\n  var args = [query, successCallback, errorCallback];\n  var task = {\n    args: args,\n    fn: count\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  initStore('store.count()', this.name, 'readonly');\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n};\n/**\r\n * Deletes an Index from the store.\r\n * @method Store#delIndex\r\n * @instance\r\n * @param  {string} indexName Name of the index.\r\n * @param  {object} [options] \r\n * @param  {function} [options.successCallback] Function called on success. Receives event and origin as parameters.\r\n * @param  {function} [options.errorCallback] Function to handle errors. Receives an error object as argument.\r\n */\n\n\nStore.prototype.delIndex = function (indexName) {\n  var _ref14 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref14$successCallbac = _ref14.successCallback,\n      successCallback = _ref14$successCallbac === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref14$successCallbac,\n      _ref14$errorCallback = _ref14.errorCallback,\n      errorCallback = _ref14$errorCallback === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref14$errorCallback;\n\n  var args = [this.name, indexName, successCallback, errorCallback];\n  var task = {\n    args: args,\n    fn: delIndex\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n};\n/**\r\n * Iterates the store by applying a function to each record in a specified property.\r\n * @method Store#aggregateFn\r\n * @instance\r\n * @param  {string} property Represents the column to apply the aggregate function.\r\n * @param  {aggregateFunction} aggregatefn Function applied over the records. \r\n * @param  {function} successCallback Function called on success. Receives result, origin and query as parameters.\r\n * @param  {object} [options]\r\n * @param  {query} [options.query] The query used to select records.errorCallback.\r\n * @param  {function} [options.errorCallback] Function to handle errors. Receives an error object as argument.\r\n * @example\r\n * // An example of object stored in the object store\r\n * //\r\n * let person = {\r\n *     name: 'Peter',\r\n *     age: 32,\r\n *     salary: 1100\r\n * };\r\n * \r\n * const mydb = new Sixdb('myDatabase');\r\n * \r\n * // Instantiates the store \"southFactory\"\r\n * //\r\n * let store = mydb.openStore('southFactory');\r\n * \r\n * // Sends to mySuccesCallback the average age of employees with salary highter than 1500\r\n * //\r\n * store.aggregateFn('age', mydb.aggregateFuncs.avg, mySuccesCallback, {query: 'salary > 1500'});\r\n * \r\n * mydb.execTasks();\r\n */\n\n\nStore.prototype.aggregateFn = function (property, aggregatefn, successCallback) {\n  var _ref15 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      query = _ref15.query,\n      errorCallback = _ref15.errorCallback;\n\n  var origin = 'Store.aggregateFn()';\n  var args = {\n    property: property,\n    successCallback: successCallback,\n    aggregatefn: aggregatefn,\n    origin: origin,\n    query: query,\n    errorCallback: errorCallback\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  initStore('initStore', this.name, 'readonly');\n  makeAggregateTask(args);\n};\n/**\r\n * Updates one or more records in the store.\r\n * @method Store#update\r\n * @instance\r\n * @param  {query} query The query used to select the records to update.\r\n * @param  {object} objectValues Object wich contains the properties with the new values.<br>\r\n * Example: {property1: newValue1, property4: newValue4}<br>\r\n * The value can be a function that receives the old value and returns a new value:<br>\r\n * Example: {property2: function(oldValue){return oldValue + 100;}}\r\n * @param  {object} [options]\r\n * @param  {function} [options.successCallback] Function called on success. Receives event and origin as parameters.\r\n * @param  {function} [options.errorCallback] Function to handle errors. Receives an error object as argument.errorCallback\r\n * @example\r\n * // An example of object stored in the object store\r\n * //\r\n * let person = {\r\n *     name: 'Peter',\r\n *     age: 32,\r\n *     salary: 1100\r\n * };\r\n * \r\n * const mydb = new Sixdb('myDatabase');\r\n * \r\n * // Instantiates the store \"southFactory\"\r\n * //\r\n * let store = mydb.openStore('southFactory');\r\n * \r\n * // Updates salary of record with primary key 4 (only in the case that object store has autoincrement primary key)\r\n * //\r\n * store.update(4, {salary: 1200});\r\n * \r\n * // Updates salary and age of Peter\r\n * //\r\n * store.update('name = Peter', {age: 33, salary: 1150});\r\n * \r\n * // Increases salary of employees with age > 40 by 100 using a function\r\n * //\r\n * store.update(\r\n *     'age > 40', \r\n *     {\r\n *         salary: function(oldSalary){ return oldSalary + 100;} \r\n *     }\r\n * );\r\n * \r\n * mydb.execTasks();\r\n */\n\n\nStore.prototype.update = function (query, objectValues) {\n  var _ref16 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref16$successCallbac = _ref16.successCallback,\n      successCallback = _ref16$successCallbac === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref16$successCallbac,\n      _ref16$errorCallback = _ref16.errorCallback,\n      errorCallback = _ref16$errorCallback === void 0 ? _main__WEBPACK_IMPORTED_MODULE_0__[\"voidFn\"] : _ref16$errorCallback;\n\n  var options = {\n    successCallback: successCallback,\n    errorCallback: errorCallback\n  };\n  var args = [query, objectValues, options];\n  var task = {\n    args: args,\n    fn: update\n  };\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(_main__WEBPACK_IMPORTED_MODULE_0__[\"tkOpen\"]);\n  initStore('initStore()', this.name, 'readwrite');\n  _taskQueue__WEBPACK_IMPORTED_MODULE_2__[\"tasks\"].push(task);\n};\n\n//# sourceURL=webpack:///./src/sixdbStore.js?");

/***/ }),

/***/ "./src/taskQueue.js":
/*!**************************!*\
  !*** ./src/taskQueue.js ***!
  \**************************/
/*! exports provided: tasks, checkTasks, done, execTasks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tasks\", function() { return tasks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkTasks\", function() { return checkTasks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"done\", function() { return done; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"execTasks\", function() { return execTasks; });\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger */ \"./src/logger.js\");\n\nvar idle = true;\nvar tasks = [];\nfunction checkTasks() {\n  if (tasks.length == 0) {\n    idle = true;\n    Object(_logger__WEBPACK_IMPORTED_MODULE_0__[\"logger\"])('No pending tasks');\n    return;\n  }\n\n  idle = false;\n  var task = tasks[0];\n\n  if (!task.type) {\n    task.fn.apply(this, task.args);\n  } else {\n    Object(_logger__WEBPACK_IMPORTED_MODULE_0__[\"logger\"])('Custom task' + _logger__WEBPACK_IMPORTED_MODULE_0__[\"logEnum\"].begin);\n    task.fn.apply(task.context, task.args);\n    done();\n  }\n}\nfunction done() {\n  tasks.shift();\n  checkTasks();\n}\nfunction execTasks() {\n  if (idle) {\n    checkTasks();\n  }\n}\n\n//# sourceURL=webpack:///./src/taskQueue.js?");

/***/ })

/******/ });