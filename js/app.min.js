var db,clientes,facturas,actualVersion,DBname,pendingStore=[],taskQueue=[],dbOpened=!1,cliente1={nombre:"Antonio",telefono:"986585254"},cliente2={nombre:"Manolo",telefono:"600124512"},factura1={idcliente:"1",importe:120},factura2={idcliente:"2",importe:320},factura3={idcliente:"1",importe:145},arrayFacturas=[{idcliente:"1",importe:"15"},{idcliente:"2",importe:"460"},{idcliente:"2",importe:"500"}];function isIndexedDBavailable(){var available=!0;return"indexedDB"in window||(console.log("This browser doesn't support IndexedDB"),available=!1),available}function openDB(name,version){var request=window.indexedDB.open(name,version);request.onerror=function(event){alert("Why didn't you allow my web app to use IndexedDB?!")},request.onsuccess=function(event){console.log("db opened"),db=event.target.result,actualVersion=db.version,dbOpened=!0},request.onupgradeneeded=function(event){if(db=event.target.result,actualVersion=db.version,"string"==typeof pendingStore[0])db.createObjectStore(pendingStore[0],{keyPath:pendingStore[1],autoIncrement:pendingStore[2]}),console.log("New objectStore created"),console.log(pendingStore),checkTasks();else if("object"==typeof pendingStore[0]){var storesNumber=pendingStore.length,i;for(console.log(storesNumber),i=0;i<storesNumber;i++)console.log(pendingStore[i]),db.createObjectStore(pendingStore[i][0],{keyPath:pendingStore[i][1],autoIncrement:pendingStore[i][2]});checkTasks()}dbOpened=!0}}function closeDB(){dbOpened&&(db.close(),console.log("db closed"),dbOpened=!1)}function newObjStore(name,keyPath,autoincrement){var task={type:"newStore",name:name,keyPath:keyPath,autoIncrement:autoincrement};taskQueue.push(task),checkTasks()}function newObjStores(storesArray){var task={type:"newStores",objStores:storesArray};taskQueue.push(task),checkTasks()}function add(objStore,obj){var task={type:"add",name:objStore,obj:obj};taskQueue.push(task)}function checkTasks(){if(0!=taskQueue.length){var type=taskQueue[0].type;switch(console.log(type),type){case"newStore":if(dbOpened){(pendingStore=[])[0]=taskQueue[0].name,pendingStore[1]=taskQueue[0].keyPath,pendingStore[2]=taskQueue[0].autoIncrement;var newVersion=actualVersion+1,actualName=db.name;closeDB(),console.log(taskQueue),taskQueue.shift(),openDB(actualName,newVersion)}else setTimeout(function(){console.log("addObjStore retry"),checkTasks()},100);break;case"newStores":if(dbOpened){pendingStore=[],pendingStore=taskQueue[0].objStores;var newVersion=actualVersion+1,actualName=db.name;closeDB(),console.log(taskQueue),taskQueue.shift(),openDB(actualName,newVersion)}else setTimeout(function(){console.log("addObjStores retry"),checkTasks()},100);break;case"add":if(dbOpened){var objStore=taskQueue[0].name,obj=taskQueue[0].obj,store=db.transaction(objStore,"readwrite").objectStore(objStore);if(Array.isArray(obj)){var i,objSize;for(objSize=obj.length,i=0;i<objSize;i++)store.add(obj[i]);taskQueue.shift(),console.log("records added")}else store.add(obj),taskQueue.shift(),console.log("record added")}else setTimeout(function(){console.log("addRecord retry in 100ms"),checkTasks()},100);break;default:console.log("idle")}}}openDB("test",1),newObjStores([["clientes","id",!0],["facturas","id2",!0],["albaranes","id3",!0]]),add("clientes",arrayFacturas),closeDB();