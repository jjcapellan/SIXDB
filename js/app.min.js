var taskQueue=[],cliente1={nombre:"Antonio",telefono:"986585254"},cliente2={nombre:"Manolo",telefono:"600124512"},factura1={idcliente:"1",importe:120},factura2={idcliente:"2",importe:320},factura3={idcliente:"1",importe:145},arrayFacturas=[{idcliente:"1",importe:"15"},{idcliente:"2",importe:"460"},{idcliente:"2",importe:"500"}],add={db:function(dbName){var task={type:"newDB",dbName:dbName};taskQueue.push(task),checkTasks()},store:function(dbName,storeName,keyPath,autoIncrement){var task={type:"newStore",dbName:dbName,storeName:storeName,keyPath:keyPath,autoIncrement:autoIncrement};taskQueue.push(task),checkTasks()},records:function(dbName,storeName,obj){var task={type:"newRecords",dbName:dbName,storeName:storeName,obj:obj};taskQueue.push(task),checkTasks()}};function isIndexedDBavailable(){var available=!0;return"indexedDB"in window||(console.log("This browser doesn't support IndexedDB"),available=!1),available}function newDB(dbName){var request=window.indexedDB.open(dbName);request.onerror=function(event){alert("Error. You must allow web app to use indexedDB.")},request.onsuccess=function(event){var db;event.target.result.close(),console.log("Database "+dbName+" created"),taskQueue.shift(),checkTasks()}}function newStore(dbName,storeName,keyPath,autoIncrement){var db,version,request=window.indexedDB.open(dbName);request.onerror=function(event){alert("Error. You must allow web app to use indexedDB.")},request.onsuccess=function(event){var db=event.target.result;version=db.version,db.close(),console.log("Version tested");var newVersion=version+1;(request=window.indexedDB.open(dbName,newVersion)).onupgradeneeded=function(event){(db=event.target.result).createObjectStore(storeName,{keyPath:keyPath,autoIncrement:autoIncrement})},request.onsuccess=function(event){db.close(),console.log("New objectStore "+storeName+" created"),taskQueue.shift(),checkTasks()}}}function newRecord(dbName,storeName,obj){var request=window.indexedDB.open(dbName);request.onerror=function(event){alert("Error. You must allow web app to use indexedDB.")},request.onsuccess=function(event){var db=event.target.result;console.log("Database "+dbName+" opened");var counter=0,store=db.transaction(storeName,"readwrite").objectStore(storeName),i,objSize,request;if(Array.isArray(obj))for(objSize=obj.length,i=0;i<objSize;i++){var request;(request=store.add(obj[i])).onsuccess=function(event){++counter==objSize&&(console.log("Records added in store "+storeName),db.close(),taskQueue.shift(),console.log("Database "+dbName+" closed"),checkTasks())}}else(request=store.add(obj)).onsuccess=function(event){console.log("record added"),db.close(),taskQueue.shift(),console.log("Database "+dbName+" closed"),checkTasks()}}}function checkTasks(){if(0!=taskQueue.length){var type=taskQueue[0].type,task=taskQueue[0];switch(console.log(type),type){case"newStore":newStore(task.dbName,task.storeName,task.keyPath,task.autoIncrement);break;case"newRecords":newRecord(task.dbName,task.storeName,task.obj);break;case"newDB":newDB(task.dbName);break;default:console.log("No pending tasks")}}}newRecord("test2","Campo1",arrayFacturas);